<#

1.
Download BAG from https://extracten.bag.kadaster.nl/lvbag/extracten/
2.
Unpack zip and unpack the 7 object files each in its own subdir
9999LIG08062021.zip
9999NUM08062021.zip
9999OPR08062021.zip
9999PND08062021.zip
9999STA08062021.zip
9999VBO08062021.zip
9999WPL08062021.zip
3
Change $BagDirectory below
4.
All this in a powershell console window

Wait a day or so and all 7 objects will be dissected in succession in 7 CSV files for import in SQL
#>

$BagDirectory = "D:\NLDATA\BAG\20210702 BAGNLDL-08062021"


$BagTypeArray = @("VBO","LIG","STA","OPR","NUM","PND","WPL")
$BagObjectArray = @("Verblijfsobject","Ligplaats","Standplaats","OpenbareRuimte","Nummeraanduiding","Pand","Woonplaats")

$script = '

  $sOutput = "$BagDirectory"

  $substringcount=15
  #If ($BAGtype = $BAGtype) {$substringcount=15}else{$substringcount=17};

  # Output Object collection
  $oOutputs = @()

  # Define output object
  $Record = [ordered] @{
    ''XMLFileNo'' = ''''
    ''XMLFileItemNo'' = ''''
    ''XMLBAGType'' = ''''
    ''postcode'' = ''''
    ''tijdstipEindRegistratieLV'' = ''''
    ''PandRef'' = ''''
    ''pos'' = ''''
    ''documentdatum'' = ''''
    ''OpenbareRuimteRef'' = ''''
    ''gebruiksdoel'' = ''''
    ''posList'' = ''''
    ''voorkomenidentificatie'' = ''''
    ''status'' = ''''
    ''naam'' = ''''
    ''huisletter'' = ''''
    ''NummeraanduidingRef'' = ''''
    ''oorspronkelijkBouwjaar'' = ''''
    ''huisnummer'' = ''''
    ''eindRegistratie'' = ''''
    ''tijdstipRegistratie'' = ''''
    ''geconstateerd'' = ''''
    ''identificatie'' = ''''
    ''beginGeldigheid'' = ''''
    ''eindGeldigheid'' = ''''
    ''documentnummer'' = ''''
    ''tijdstipRegistratieLV'' = ''''
    ''oppervlakte'' = ''''
    ''type'' = ''''
    ''WoonplaatsRef'' = ''''
    ''typeAdresseerbaarObject'' = ''''
  }

  #change window title
  $XMLBAGType = $sInput.Substring($sInput.Length-17,1)
  $host.ui.RawUI.WindowTitle = "Type of BAG XML dissecting:   $XMLBAGType"

  $files = Get-ChildItem -Path "<<sInput>>" -File
#  Write-Host "Total XML files: "$files.Count

  ForEach($file in $files) {
    $XMLFilenumber = ($file.Name).Substring(18,4)
    # skip some in case of errors and corrections
    If ($XMLFilenumber -eq 0){
      # do nothing  
    }else{
      $XMLFileItemNumber = 0
      $xml = [xml](Get-Content -Path $file.FullName -Raw)

      ForEach($item in $xml.bagStand.standBestand.stand.bagObject.<<sObject>>) {
        $XMLFileItemNumber++
        $oOutput = New-Object PSObject -property $Record
        $oOutput.''XMLFileNo'' = $XMLFilenumber
        $oOutput.''XMLFileItemNo'' = $XMLFileItemNumber
        $oOutput.''XMLBAGType'' = $XMLBAGType
        $oOutput.''NummeraanduidingRef'' = $item.heeftAlsHoofdadres.NummeraanduidingRef."#text"
        $oOutput.''voorkomenidentificatie'' = $item.voorkomen.Voorkomen.voorkomenidentificatie
        $oOutput.''beginGeldigheid'' = $item.voorkomen.Voorkomen.beginGeldigheid
        $oOutput.''eindGeldigheid'' = $item.voorkomen.Voorkomen.eindGeldigheid
        $oOutput.''tijdstipRegistratie'' = $item.voorkomen.Voorkomen.tijdstipRegistratie
        $oOutput.''eindRegistratie'' = $item.voorkomen.Voorkomen.eindRegistratie
        $oOutput.''tijdstipRegistratieLV'' = $item.voorkomen.Voorkomen.BeschikbaarLV.tijdstipRegistratieLV
        $oOutput.''tijdstipEindRegistratieLV'' = $item.voorkomen.Voorkomen.BeschikbaarLV.tijdstipEindRegistratieLV
        $oOutput.''identificatie'' =  $item.identificatie."#text"
        $oOutput.''huisnummer'' = $item.huisnummer
        $oOutput.''huisletter'' = $item.huisletter
        $oOutput.''postcode'' = $item.postcode
        $oOutput.''typeAdresseerbaarObject'' = $item.typeAdresseerbaarObject
        $oOutput.''naam'' = $item.naam
        $oOutput.''type'' = $item.type
        $oOutput.''gebruiksdoel'' = $item.gebruiksdoel -join "|"  
        $oOutput.''pos'' = ''''
        $oOutput.''posList'' = ''''
        $oOutput.''oppervlakte'' = $item.oppervlakte
        $oOutput.''oorspronkelijkBouwjaar'' = $item.oorspronkelijkBouwjaar
        $oOutput.''status'' = $item.status
        $oOutput.''geconstateerd'' = $item.geconstateerd
        $oOutput.''documentdatum'' = $item.documentdatum
        $oOutput.''documentnummer'' = $item.documentnummer
        $oOutput.''WoonplaatsRef'' = $item.ligtIn.WoonplaatsRef."#text"
        $oOutput.''OpenbareRuimteRef'' = $item.ligtAan.OpenbareRuimteRef."#text"
        $oOutput.''PandRef'' = $item.maaktDeelUitVan.PandRef."#text"

        #append to object collection
        $oOutputs += $oOutput
      }
      $oOutputs | `
      Export-Csv -NoTypeInformation -Append -Path (Join-Path -Path $sOutput -ChildPath "$($file.name.substring(0,$substringcount)).csv")
#      Write-Host "File $file done!"
      $oOutputs = @()
    }
  }'


For ($i=0; $i -lt $BagTypeArray.Length; $i++) {
  $sInput = "$BagDirectory\9999"+$BagTypeArray[$i]+"08062021\*.xml"
  $sObject = $BagObjectArray[$i]
  $scripti = $script.replace('<<sInput>>',$sInput).replace('<<sObject>>',$sObject)
  $scriptBlock = [Scriptblock]::Create($scripti)
  Invoke-Command -ScriptBlock $scriptBlock
}



